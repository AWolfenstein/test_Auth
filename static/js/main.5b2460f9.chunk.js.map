{"version":3,"sources":["logo.svg","actions/authAction.js","components/ModalError.jsx","components/SignIn.jsx","components/User.jsx","components/NotFound.jsx","App.js","serviceWorker.js","reducers/auth.js","reducers/index.js","index.js"],"names":["module","exports","ModalError","show","setShow","message","setErrorM","dispatch","useDispatch","handleClose","type","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","connect","state","auth","isLoggedIn","useState","errorM","history","useHistory","useFormik","initialValues","clientId","email","password","validate","errors","touched","values","test","length","onSubmit","data","JSON","stringify","fetch","method","mode","headers","Accept","body","then","response","ok","json","object","payload","Error","statusText","localStorage","setItem","accessToken","token","userLoggedIn","catch","e","console","log","handleSubmit","getFieldProps","submitCount","setValues","setFieldValue","useEffect","push","removeItem","err","Container","fluid","Row","Col","className","Form","Group","controlId","Label","Control","name","placeholder","required","isValid","isInvalid","Feedback","Text","user","getItem","Authorization","style","margin","Card","as","NotFound","to","App","exact","path","component","Boolean","window","location","hostname","match","parse","initialState","combineReducers","action","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.5b2460f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nfunction userLoggedIn(data) {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: { token: data },\r\n  };\r\n}\r\n\r\nexport function submitLogin(data) {\r\n  return (dispatch) => {\r\n    return fetch(`https://tager.dev.ozitag.com/api/auth/user`, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        // \"Access-Control-Allow-Origin\": \"https://awolfenstein.github.io/\",\r\n        // \"Access-Control-Allow-Headers\": \"*\",\r\n        // \"Access-Control-Allow-Methods\": \"*\",\r\n      },\r\n      body: data,\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          response.json().then(function (object) {\r\n            dispatch({\r\n              type: LOGIN_FAIL,\r\n              payload: object.errors.email || object.errors,\r\n            });\r\n          });\r\n          throw Error(response.statusText);\r\n        }\r\n\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        localStorage.setItem(\"accessToken\", data.data.accessToken);\r\n        dispatch(userLoggedIn(data.data));\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n}\r\nexport function getProfile() {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    return fetch(`https://tager.dev.ozitag.com/api/user/profile`, {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        // \"Access-Control-Allow-Origin\": \"*\",\r\n        // \"Access-Control-Allow-Headers\": \"*\",\r\n        // \"Access-Control-Allow-Methods\": \"*\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText);\r\n        }\r\n\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        dispatch({\r\n          type: GET_PROFILE,\r\n          payload: data.data,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    return fetch(`https://tager.dev.ozitag.com/api/user/profile/logout`, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        // \"Access-Control-Allow-Origin\": \"*\",\r\n        // \"Access-Control-Allow-Headers\": \"*\",\r\n        // \"Access-Control-Allow-Methods\": \"*\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText);\r\n        }\r\n\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        localStorage.removeItem(\"accessToken\");\r\n        dispatch({\r\n          type: USER_LOGOUT,\r\n          payload: data.data,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n}\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE,\r\n});\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { clearMessage } from \"../actions/authAction\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst ModalError = ({ show, setShow, message,setErrorM }) => {\r\n  const dispatch = useDispatch();\r\n  const handleClose = () => {\r\n    setErrorM(\"\")\r\n    dispatch(clearMessage());\r\n    setShow(false);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Error!</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{message}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\nexport default ModalError;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport ModalError from \"./ModalError\";\r\nimport { Container, Col, Row, Form, Button } from \"react-bootstrap\";\r\nimport \"../styles/form.css\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { submitLogin } from \"../actions/authAction\";\r\n\r\nconst SignIn = ({ isLoggedIn, message }) => {\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const [errorM, setErrorM] = useState(\"\");\r\n  let history = useHistory();\r\n  const {\r\n    values,\r\n    handleSubmit,\r\n    submitCount,\r\n    getFieldProps,\r\n    setValues,\r\n    touched,\r\n    errors,\r\n    setFieldValue,\r\n  } = useFormik({\r\n    initialValues: {\r\n      clientId: \"1\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validate() {\r\n      const errors = {};\r\n      if (touched.email && !values.email) {\r\n        errors.email = \"Required\";\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n      ) {\r\n        errors.email = \"Invalid email address\";\r\n      }\r\n      if (touched.password && !values.password) {\r\n        errors.password = \"Required\";\r\n      } else if (values.password.length <= 3) {\r\n        errors.password = \"Must be more than 3 characters\";\r\n      }\r\n      return errors;\r\n    },\r\n    onSubmit: (values) => {\r\n      dispatch(submitLogin(JSON.stringify(values, null, 2)));\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    isLoggedIn ? history.push(\"/user\") : localStorage.removeItem(\"accessToken\");\r\n  });\r\n  useEffect(() => {\r\n    if (message) {\r\n      const err = (message && message.message) || message.password.message;\r\n      setErrorM(err);\r\n      setShow(true);\r\n    }\r\n  }, [message]);\r\n  const body = (\r\n    <Container fluid=\"md\">\r\n      <Row>\r\n        <Col className=\"colForm\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter email\"\r\n                {...getFieldProps(\"email\")}\r\n                required\r\n                isValid={touched[\"email\"] && !errors[\"email\"]}\r\n                isInvalid={!!errors[\"email\"]}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors[\"email\"]}\r\n              </Form.Control.Feedback>\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                {...getFieldProps(\"password\")}\r\n                placeholder=\"Password\"\r\n                isValid={touched[\"password\"] && !errors[\"password\"]}\r\n                isInvalid={\r\n                  !!errors[\"password\"] || (message && message[\"password\"])\r\n                }\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors[\"password\"]}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n            <br />\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n  return (\r\n    <>\r\n      {body}\r\n      <ModalError\r\n        show={show}\r\n        setShow={setShow}\r\n        message={errorM}\r\n        setErrorM={setErrorM}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, message } = state.auth;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(SignIn);\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container, Col, Row, Card, Button } from \"react-bootstrap\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { getProfile,logout } from \"../actions/authAction\";\r\nconst User = ({ user,isLoggedIn }) => {\r\n  const dispatch = useDispatch();\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    isLoggedIn ? dispatch(getProfile()) : history.push(\"/test_Auth\")\r\n  }, [isLoggedIn]);\r\n const logoutNow =()=>{\r\n    dispatch(logout())  \r\n  \r\n }\r\n  const body = (\r\n    <Container fluid=\"md\">\r\n      <Row>\r\n        <Col style={{ margin: \"20%\" }}>\r\n          <Card>\r\n            <Card.Header as=\"h5\">Profile</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>{user && user.name}</Card.Title>\r\n              <Card.Text>{user && user.email}</Card.Text>\r\n              <Button variant=\"primary\" onClick={logoutNow}>Logout</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n  return body;\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, user } = state.auth;\r\n  return {\r\n    isLoggedIn,\r\n    user,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(User);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h1>404 - Not Found!</h1>\r\n    <Link to=\"/test_Auth\">\r\n      Go Home\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route ,Redirect } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport SignIn from \"./components/SignIn\";\nimport User from \"./components/User\";\nimport NotFound from \"./components/NotFound\";\nfunction App() {\n \n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n     \n          <Route exact path=\"/test_Auth\" >\n            <SignIn  />\n          </Route>\n          <Route path=\"/user\" >\n            <User />\n          </Route>\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import  {LOGIN_SUCCESS,LOGIN_FAIL, USER_LOGOUT,GET_PROFILE,CLEAR_MESSAGE} from \"../actions/authAction\"\r\nconst token = JSON.parse(localStorage.getItem(\"token\"));\r\n\r\nconst initialState = token\r\n  ? { isLoggedIn: true, token }\r\n  : { isLoggedIn: false, token: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        token: payload.token,\r\n      };\r\n      case GET_PROFILE:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          user: payload,\r\n        };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        message: payload,\r\n      };\r\n      case CLEAR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        message: \"\",\r\n      };\r\n    case USER_LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nexport default combineReducers({\r\n  auth,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducers\";\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}